{
  "clause_name": "WHERE",
  "methods": [
    {
      "name": "where",
      "docstring_summary": "Concatenate a WHERE clause to the query, created as {name} {comparison_operator} {value}. E.g. x = 'abc'.",
      "args": {
        "name": {
          "type": "str",
          "description": "The name of the object which is to be used in the comparison"
        },
        "comparison_operator": {
          "type": "str",
          "description": "A string operator, according to which the comparison between compared object and the {value} is done, e.g. for \"=\", we get: {name} = {value}"
        },
        "value": {
          "type": "str",
          "description": "The value which is compared against"
        },
        "**kwargs": {
          "description": "kwargs"
        }
      }
    },
    {
      "name": "where_multiple",
      "docstring_summary": "Concatenate a WHERE clause to the query, created from a list of given property filters.",
      "args": {
        "filters": {
          "type": "dict",
          "description": "A dict representing the set of properties to be filtered"
        },
        "comparison_operator": {
          "type": "str",
          "default": "\"=\"",
          "description": "A string operator, according to which the comparison between property values is done, e.g. for \"=\", we get: property.name = property.value"
        },
        "boolean_operator": {
          "type": "str",
          "default": "' AND '",
          "description": "The boolean operator to apply between predicates"
        },
        "**kwargs": {
          "description": "kwargs"
        }
      }
    },
    {
      "name": "where_literal",
      "docstring_summary": "Concatenate a literal WHERE clause to the query.",
      "args": {
        "statement": {
          "type": "str",
          "description": "A literal string of the required filter"
        },
        "**kwargs": {
          "description": "kwargs"
        }
      }
    }
  ],
  "successors": [
    "Return", 
    "Delete", 
    "Where", 
    "Set", 
    "Remove", 
    "OperatorStart", 
    "QueryStartAvailable"
  ] 
}